{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","islarge","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","name","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","APIKEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setmovie","requests","Math","floor","random","length","style","backgroundImage","backgroundRepeat","backgroundSize","orginal_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74e731d9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\"\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\n\r\n\r\nfunction Row({ title, fetchUrl, islarge }) {\r\n  \r\n  const [movies, setMovies] = useState([]);\r\n   const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n const opts = {\r\n      height: '390',\r\n      width: '640',\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n      },\r\n    };\r\n//  console.log(movies)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      // console.log(request.data.results);\r\n      setMovies(request.data.results);\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  // console.log(movies);\r\n  \r\n \r\n const handleClick =(movie)=>{\r\n   console.log(movie?.name)\r\n      if (trailerUrl){\r\n        \r\n        setTrailerUrl (\"\");\r\n      }else{\r\n         movieTrailer(movie?.name || \"\")\r\n         .then(url => {\r\nconst urlParams = new URLSearchParams(new URL(url)?.search)\r\nsetTrailerUrl(urlParams.get('v'))\r\n\r\n\r\n         })\r\n         .catch((error)=>{\r\n           console.log(error)\r\n         })\r\n      }\r\n    \r\n    }\r\n  return (\r\n    <div className=\"row\">\r\n      <h3 className=\"genere-title\">{title}</h3>\r\n\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n          onClick ={()=>handleClick(movie)}\r\n            key={movie.id}\r\n            className={`row_poster ${islarge && \"row_posterLarge\"}`}\r\n            src={`${baseURL}${\r\n              islarge ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n{      trailerUrl &&\r\n   <Youtube videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const APIKEY = \"e0712c1a51334604de6ae145213093fc\";\r\n\r\nconst request = {\r\n  fetchTrending: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${APIKEY}&with_genres=99`,\r\n};\r\nexport default request;\r\n","import React, {useState } from \"react\";\r\n\r\nimport axios from \"./axios\";\r\nimport requests from \"./request\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setmovie] = useState();\r\n\r\n  useState(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setmovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundRepeat: \"no-repeat\",\r\n\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <div className=\"banner_content\">\r\n        <h2 className=\"banner-title\">\r\n          {movie?.title || movie?.name || movie?.orginal_name}\r\n        </h2>\r\n        <button className=\"banner_button\">Play</button>\r\n        <button className=\"banner_button\">My list</button>\r\n\r\n        <article className=\"banner_description\">{movie?.overview}</article>\r\n      </div>\r\n\r\n      <div className=\"fade-banner\"></div>\r\n    </header>\r\n  );\r\n}\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    //\r\n    <div className={`nav  ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"logo-netflix\"\r\n        src=\"https://1000logos.net/wp-content/uploads/2017/05/Netflix-Logo.png\"\r\n        alt=\"netflix_logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"netflix_logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Row from \"./Row\";\r\nimport \"./App.css\";\r\nimport \"./Nav.css\";\r\nimport request from \"./request\";\r\nimport Banner from \"./Banner\";\r\nimport Nav from \"./Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row fetchUrl={request.fetchNetflixOriginals} title=\"Netflix\" islarge />\r\n      <Row fetchUrl={request.fetchTrending} title=\"Trending Now\" />\r\n      <Row fetchUrl={request.fetchActionMovies} title=\"Action Movies\" />\r\n      <Row fetchUrl={request.fetchComedyMovies} title=\"Comedy Movies\" />\r\n      <Row fetchUrl={request.fetchHorrorMovies} title=\"Horror Movies\" />\r\n      <Row fetchUrl={request.fetchRomanceMovies} title=\"Romance Movies\" />\r\n      <Row fetchUrl={request.fetchTopRated} title=\"Top Rated\" />\r\n      <Row fetchUrl={request.fetchDocumentaries} title=\"Documentaries\" />\r\n\r\n      <div className=\"footer\">© Designed By Nameisloki 2021</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}